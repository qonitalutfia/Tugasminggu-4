const responseData = pm.response.json();

pm.test("Response status code must be 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Response time is less than 1.5 seconds", function () {
  pm.expect(pm.response.responseTime).to.be.below(1500);
});

pm.test("Response must be object", () => {
    pm.expect(responseData).to.be.an('object');
});

pm.test("Response results must be array", () => {
    const { results } = responseData;
    pm.expect(results).to.be.an('array');
});

pm.test("Response paginate next must be string or null", () => {
    const { next } = responseData;
    pm.expect(next).to.satisfy((s) => {
        return s === null || typeof s == 'string'
    });
});

pm.test("Response paginate previous must be string or null", () => {
    const { previous } = responseData;
    pm.expect(previous).to.satisfy((data) => {
        return data === null || typeof data == 'string'
    });
});